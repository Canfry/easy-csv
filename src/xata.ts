// Generated by Xata Codegen 0.28.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "" },
      {
        name: "email",
        type: "email",
        notNull: true,
        defaultValue: "dev@dev.com",
      },
      { name: "password", type: "string", notNull: true, defaultValue: "" },
    ],
    revLinks: [{ column: "user", table: "files" }],
  },
  {
    name: "files",
    columns: [
      { name: "name", type: "string", notNull: true, defaultValue: "" },
      { name: "user", type: "link", link: { table: "users" }, unique: true },
      { name: "file", type: "file" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Files = InferredTypes["files"];
export type FilesRecord = Files & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  files: FilesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Christophe-Anfry-s-workspace-phgkqo.us-east-1.xata.sh/db/easy-csv",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
