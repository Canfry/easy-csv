---
import type { RecordArray, SelectedPick } from '@xata.io/client';
import Layout from '../../layouts/Layout.astro';
import { XataClient, type FilesRecord } from '../../xata';

import * as csv from 'csv-string';
import FileList from '../../components/FileList';

const user = Astro.cookies.get('userId');
if (!user) {
  return Astro.redirect('/');
}

const xata = new XataClient({ apiKey: import.meta.env.XATA_API_KEY });

const files = await xata.db.files.filter({ 'user.id': user.value }).getMany();

export type FileData = {
  data: { [k: string]: string }[];
};

export type Data = {
  headers: string[];
  data: FileData['data'];
};

export const getFileData = async (fileName: string): Promise<Data> => {
  const correctFile = await xata.db.files
    .filter({ name: fileName, 'user.id': user.value })
    .getFirst();
  const file = await xata.db.files.read(correctFile!.id, [
    'id',
    'name',
    'file',
    'file.base64Content',
    'file.signedUrl',
  ]);
  const plainText = Buffer.from(file?.file?.base64Content!, 'base64').toString(
    'utf-8'
  );
  const parsedCsv = csv.parse(plainText, { output: 'objects' });
  const headers = Object.keys(parsedCsv[0]);
  console.log(headers);
  return { headers, data: parsedCsv };
};

type Props = {
  files: RecordArray<Readonly<SelectedPick<FilesRecord, ['*']>>>;
};
---

<Layout title='Dashboard'>
  {
    files.length === 0 ? (
      <div class='max-lg:px-24 px-48 z-20 py-12 max-sm:px-5 max-sm:py-10 max-w-7xl w-full mx-auto flex flex-col gap-y-10 items-center justify-center'>
        <h1 class='text-center text-3xl text-slate-700'>
          It seems you didn't upload any files yet.{' '}
          <span class='text-orange-600'>Let's start!!</span>
        </h1>
        <form
          class='flex items-center gap-x-6 max-md:flex-col max-md:gap-y-6'
          method='POST'
          action='/api/upload'
          enctype='multipart/form-data'
        >
          <input
            type='file'
            name='file'
            id='file'
            required
            class='file-input file-input-bordered border-orange-600 file-input-[orange-600] w-full max-w-xs'
          />
          <button
            type='submit'
            class='border border-slate-600 bg-transparent text-orange-600 py-2.5 px-4 rounded-md hover:bg-orange-600 hover:border-orange-600 hover:text-white'
          >
            Upload
          </button>
        </form>
      </div>
    ) : (
      <FileList client:load files={files} />
    )
  }
</Layout>
